[
    {
        "id": "22c5681427f5f16c",
        "type": "tab",
        "label": "My2N connector (office) - Auth v.2",
        "disabled": false,
        "info": "This flow automatically creates a Mobile Video (MV) service in the My2N\r\nand assigns the generated phone number to the newly added user in the ACOM.\r\nOnce such a user is deleted from the ACOM, their device will be deleted from the My2N as well.\r\nThis flow does not work for My2N sites set as MDU.",
        "env": []
    },
    {
        "id": "4e9450a5c0c1a2c0",
        "type": "group",
        "z": "22c5681427f5f16c",
        "name": "Creating / Deleting devices",
        "style": {
            "label": true
        },
        "nodes": [
            "f08684a962f516b6",
            "2a16811018645009",
            "e154c996175f2b47",
            "cff4bab635246357",
            "735be7c02c9a324e",
            "58ce79a8b9b08990",
            "f057a5c66659e383"
        ],
        "x": 34,
        "y": 359,
        "w": 1954,
        "h": 328
    },
    {
        "id": "2d1a32c0d45e626e",
        "type": "group",
        "z": "22c5681427f5f16c",
        "name": "My2N Authentication",
        "style": {
            "label": true
        },
        "nodes": [
            "dae30434200a6a52",
            "7dc7ae4c396c209a",
            "b75170dd040fcd17",
            "6aae544055ae9217",
            "08ded1e004f15b02",
            "be52ee7881bef837",
            "22cad40d62540e0a",
            "29e8bfe3b8a0045c",
            "c9fba779ce0bb846",
            "4e2c80369c8e1bb3"
        ],
        "x": 38,
        "y": 219,
        "w": 1552,
        "h": 122
    },
    {
        "id": "cff4bab635246357",
        "type": "group",
        "z": "22c5681427f5f16c",
        "g": "4e9450a5c0c1a2c0",
        "name": "Creating device",
        "style": {
            "label": true
        },
        "nodes": [
            "88ce0c3ec2217d51",
            "d9fb7bb58a5d7dc1",
            "d9b542c4aa1434c5",
            "8ef720979305214a",
            "c3ac4e5c37518351",
            "a47b4f19f4e6e174",
            "57433c658821b0be",
            "f65d770fd1ee6f58",
            "8d5e16139e518751",
            "d885484fc80d4be9",
            "4f3678f07c77d7a0"
        ],
        "x": 60,
        "y": 479,
        "w": 1902,
        "h": 82
    },
    {
        "id": "735be7c02c9a324e",
        "type": "group",
        "z": "22c5681427f5f16c",
        "g": "4e9450a5c0c1a2c0",
        "name": "Deleting device",
        "style": {
            "label": true
        },
        "nodes": [
            "469d9b31ceb44b57",
            "983234338666ce0b",
            "08f32ae94476047f",
            "ce03aafee2d2f379",
            "46a3a6b4abc76c1f",
            "b7087089a4106020",
            "7dfbcf846c9dd6c1",
            "76fc7fdfa1df4da5",
            "94e452042372c131",
            "2fbcd3d6d9d3adf2",
            "162a9dfb4c77ff68",
            "746c09a879b1a911"
        ],
        "x": 60,
        "y": 579,
        "w": 1762,
        "h": 82
    },
    {
        "id": "f08684a962f516b6",
        "type": "2nac-system-log",
        "z": "22c5681427f5f16c",
        "g": "4e9450a5c0c1a2c0",
        "filter": "{\"category\":\"UserAction\"}",
        "filtertype": "json",
        "name": "",
        "x": 120,
        "y": 420,
        "wires": [
            [
                "e154c996175f2b47"
            ]
        ]
    },
    {
        "id": "2a16811018645009",
        "type": "switch",
        "z": "22c5681427f5f16c",
        "g": "4e9450a5c0c1a2c0",
        "name": "created or deleted ?",
        "property": "payload.Event",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "User created",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "User deleted",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 500,
        "y": 420,
        "wires": [
            [
                "f057a5c66659e383"
            ],
            [
                "58ce79a8b9b08990"
            ]
        ]
    },
    {
        "id": "e154c996175f2b47",
        "type": "change",
        "z": "22c5681427f5f16c",
        "g": "4e9450a5c0c1a2c0",
        "name": "flow data to msg",
        "rules": [
            {
                "t": "set",
                "p": "companyId",
                "pt": "msg",
                "to": "companyId",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "siteId",
                "pt": "msg",
                "to": "siteId",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "apiKey",
                "pt": "msg",
                "to": "apiKey",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "partnerUrl",
                "pt": "msg",
                "to": "partnerUrl",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "my2nUserId",
                "pt": "msg",
                "to": "my2nUserId",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "userId",
                "pt": "msg",
                "to": "payload.Subject.Id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 420,
        "wires": [
            [
                "2a16811018645009"
            ]
        ]
    },
    {
        "id": "88ce0c3ec2217d51",
        "type": "function",
        "z": "22c5681427f5f16c",
        "g": "cff4bab635246357",
        "name": "compositeUser",
        "func": "msg.method = \"POST\";\nmsg.headers = {};\nmsg.headers['Authorization'] = `Bearer ` + msg.apiKey;\nmsg.headers['Content-Type'] = 'application/json';\n\nif (msg.payload.Account.Email === \"\") {\n    msg.url = msg.partnerUrl + `/companies/${msg.companyId}/sites/${msg.siteId}/devices`;\n    msg.payload = {\n        \"apartmentId\": null,\n        \"name\": msg.payload.Name,\n        \"type\": \"HIPMO\",\n        \"userId\": msg.my2nUserId,\n        \"externalId\": msg.userId\n    };\n} else {\n    const getNameParts = (fullName) => {\n        if (!fullName) {\n            return { firstName: null, lastName: null };\n        }\n        const cleanName = fullName.trim().replace(/\\s+/g, ' ');\n        const nameParts = cleanName.split(' ');\n        const firstName = nameParts[0];\n        const lastName = nameParts.length > 1 ? nameParts[nameParts.length - 1] : \"null\";\n        return { firstName, lastName };\n    };\n\n    const nameParts = getNameParts(msg.payload.Name);\n\n    msg.url = msg.partnerUrl + `/composite/user`;\n    msg.payload = {\n        \"companyId\": msg.companyId,\n        \"siteId\": msg.siteId,\n        \"user\": {\n            \"email\": msg.payload.Account.Email,\n            \"firstName\": nameParts.firstName,\n            \"lastName\": nameParts.lastName,\n            \"grantedRoles\": {\n                \"companyRoles\": [{\n                    \"companyId\": msg.companyId,\n                    \"types\": [\"STANDARD\"]\n                }],\n                \"siteRoles\": [{\n                    \"siteId\": msg.siteId,\n                    \"types\": [\"USER\"]\n                }]\n            }\n        },\n        \"device\": {\n            \"externalId\": msg.userId,\n            \"name\": msg.payload.Name,\n            \"type\": \"HIPMO\"\n        }\n    };\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 516,
        "y": 520,
        "wires": [
            [
                "8ef720979305214a"
            ]
        ]
    },
    {
        "id": "d9fb7bb58a5d7dc1",
        "type": "2nac-rest-api",
        "z": "22c5681427f5f16c",
        "g": "cff4bab635246357",
        "name": "setPhoneNumber",
        "method": "PATCH",
        "endpoint": "users/{userId}",
        "query": "",
        "senderr": true,
        "x": 1106,
        "y": 520,
        "wires": [
            [
                "57433c658821b0be"
            ]
        ]
    },
    {
        "id": "d9b542c4aa1434c5",
        "type": "function",
        "z": "22c5681427f5f16c",
        "g": "cff4bab635246357",
        "name": "getPhoneNumber",
        "func": "if (msg.statusCode == 201){\n    msg.body = [{\"op\":\"add\",\"path\":\"/Calling/PhoneNumbers/-\",\"value\":{\"Number\":msg.payload.services.MOBILE_VIDEO.sipNumber+\"/2\"}}]\n    return msg;\n}\nif (msg.statusCode == 200){\n    msg.body = [{\"op\":\"add\",\"path\":\"/Calling/PhoneNumbers/-\",\"value\":{\"Number\":msg.payload.device.services.MOBILE_VIDEO.sipNumber+\"/2\"}}]\n    return msg;\n}\nelse {\n    node.warn(msg.payload);\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 906,
        "y": 520,
        "wires": [
            [
                "d9fb7bb58a5d7dc1"
            ]
        ]
    },
    {
        "id": "8ef720979305214a",
        "type": "http request",
        "z": "22c5681427f5f16c",
        "g": "cff4bab635246357",
        "name": "createUser&Device",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 706,
        "y": 520,
        "wires": [
            [
                "d9b542c4aa1434c5"
            ]
        ]
    },
    {
        "id": "c3ac4e5c37518351",
        "type": "2nac-rest-api",
        "z": "22c5681427f5f16c",
        "g": "cff4bab635246357",
        "name": "getUser",
        "method": "GET",
        "endpoint": "users/{userId}",
        "query": "",
        "senderr": true,
        "x": 356,
        "y": 520,
        "wires": [
            [
                "88ce0c3ec2217d51"
            ]
        ]
    },
    {
        "id": "469d9b31ceb44b57",
        "type": "function",
        "z": "22c5681427f5f16c",
        "g": "735be7c02c9a324e",
        "name": "getDevices",
        "func": "msg.method = \"GET\"\nmsg.url = msg.partnerUrl+`/companies/${msg.companyId}/sites/${msg.siteId}/devices?filter=${msg.payload.Subject.Name}&limit=1000`\nmsg.headers = {};\nmsg.headers['Authorization'] = `Bearer ` + msg.apiKey;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 366,
        "y": 620,
        "wires": [
            [
                "983234338666ce0b"
            ]
        ]
    },
    {
        "id": "983234338666ce0b",
        "type": "http request",
        "z": "22c5681427f5f16c",
        "g": "735be7c02c9a324e",
        "name": "getDevices",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 526,
        "y": 620,
        "wires": [
            [
                "b7087089a4106020"
            ]
        ]
    },
    {
        "id": "08f32ae94476047f",
        "type": "function",
        "z": "22c5681427f5f16c",
        "g": "735be7c02c9a324e",
        "name": "deleteDevice",
        "func": "if (msg.payload.externalId == msg.userId){\n    msg.my2nUserId = msg.payload.userId\n    msg.method = \"DELETE\"\n    msg.url = msg.partnerUrl+`/companies/${msg.companyId}/sites/${msg.siteId}/devices/${msg.payload.id}`\n    msg.headers = {};\n    msg.headers['Authorization'] = `Bearer ` + msg.apiKey;\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 986,
        "y": 620,
        "wires": [
            [
                "ce03aafee2d2f379"
            ]
        ]
    },
    {
        "id": "ce03aafee2d2f379",
        "type": "http request",
        "z": "22c5681427f5f16c",
        "g": "735be7c02c9a324e",
        "name": "deleteDevice",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1146,
        "y": 620,
        "wires": [
            [
                "7dfbcf846c9dd6c1"
            ]
        ]
    },
    {
        "id": "46a3a6b4abc76c1f",
        "type": "split",
        "z": "22c5681427f5f16c",
        "g": "735be7c02c9a324e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 846,
        "y": 620,
        "wires": [
            [
                "08f32ae94476047f"
            ]
        ]
    },
    {
        "id": "b7087089a4106020",
        "type": "change",
        "z": "22c5681427f5f16c",
        "g": "735be7c02c9a324e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.results",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 696,
        "y": 620,
        "wires": [
            [
                "46a3a6b4abc76c1f"
            ]
        ]
    },
    {
        "id": "dae30434200a6a52",
        "type": "http request",
        "z": "22c5681427f5f16c",
        "g": "2d1a32c0d45e626e",
        "name": "currentUserRequest",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1244,
        "y": 300,
        "wires": [
            [
                "7dc7ae4c396c209a"
            ]
        ]
    },
    {
        "id": "7dc7ae4c396c209a",
        "type": "change",
        "z": "22c5681427f5f16c",
        "g": "2d1a32c0d45e626e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "my2nUserId",
                "pt": "flow",
                "to": "payload.id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1464,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "b75170dd040fcd17",
        "type": "inject",
        "z": "22c5681427f5f16c",
        "g": "2d1a32c0d45e626e",
        "name": "",
        "props": [
            {
                "p": "partnerUrl",
                "v": "https://my2n.com/middleware/api/partner/v1",
                "vt": "str"
            }
        ],
        "repeat": "3000",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 134,
        "y": 300,
        "wires": [
            [
                "6aae544055ae9217"
            ]
        ]
    },
    {
        "id": "6aae544055ae9217",
        "type": "change",
        "z": "22c5681427f5f16c",
        "g": "2d1a32c0d45e626e",
        "name": "setMy2NDetails",
        "rules": [
            {
                "t": "set",
                "p": "username",
                "pt": "msg",
                "to": "yourEmail@domain.com",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "password",
                "pt": "msg",
                "to": "yourPassword",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "companyId",
                "pt": "flow",
                "to": "48287",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "siteId",
                "pt": "flow",
                "to": "354546",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "partnerUrl",
                "pt": "flow",
                "to": "partnerUrl",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 284,
        "y": 300,
        "wires": [
            [
                "08ded1e004f15b02"
            ]
        ]
    },
    {
        "id": "08ded1e004f15b02",
        "type": "http request",
        "z": "22c5681427f5f16c",
        "g": "2d1a32c0d45e626e",
        "name": "loginFlow",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://auth.my2n.com/self-service/login/api",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 444,
        "y": 300,
        "wires": [
            [
                "c9fba779ce0bb846"
            ]
        ]
    },
    {
        "id": "be52ee7881bef837",
        "type": "change",
        "z": "22c5681427f5f16c",
        "g": "2d1a32c0d45e626e",
        "name": "set apiKey",
        "rules": [
            {
                "t": "set",
                "p": "apiKey",
                "pt": "flow",
                "to": "payload.session_token",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 874,
        "y": 300,
        "wires": [
            [
                "29e8bfe3b8a0045c"
            ]
        ]
    },
    {
        "id": "22cad40d62540e0a",
        "type": "comment",
        "z": "22c5681427f5f16c",
        "g": "2d1a32c0d45e626e",
        "name": "set your My2N details here",
        "info": "not here, to the node below this one",
        "x": 314,
        "y": 260,
        "wires": []
    },
    {
        "id": "29e8bfe3b8a0045c",
        "type": "function",
        "z": "22c5681427f5f16c",
        "g": "2d1a32c0d45e626e",
        "name": "getCurrentUser",
        "func": "if (msg.statusCode == 200){\n    msg.apiKey = flow.get(\"apiKey\")\n    msg.method = \"GET\"\n    msg.url = msg.partnerUrl + \"/users/current\"\n    msg.headers = {};\n    msg.headers['Authorization'] = `Bearer ` + msg.apiKey;\n    return msg;\n}\nelse if (msg.statusCode == 401){\n    node.warn(\"Unauthorized, wrong username or password.\")\n}\nelse{\n    node.warn(\"Unspecified error \" + msg.payload)\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1044,
        "y": 300,
        "wires": [
            [
                "dae30434200a6a52"
            ]
        ]
    },
    {
        "id": "7dfbcf846c9dd6c1",
        "type": "function",
        "z": "22c5681427f5f16c",
        "g": "735be7c02c9a324e",
        "name": "getUser",
        "func": "msg.method = \"GET\"\nmsg.url = msg.partnerUrl+`/companies/${msg.companyId}/sites/${msg.siteId}/users/${msg.my2nUserId}`\nmsg.headers = {};\nmsg.headers['Authorization'] = `Bearer ` + msg.apiKey;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1296,
        "y": 620,
        "wires": [
            [
                "94e452042372c131"
            ]
        ]
    },
    {
        "id": "a47b4f19f4e6e174",
        "type": "delay",
        "z": "22c5681427f5f16c",
        "g": "cff4bab635246357",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "2",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 206,
        "y": 520,
        "wires": [
            [
                "c3ac4e5c37518351"
            ]
        ]
    },
    {
        "id": "76fc7fdfa1df4da5",
        "type": "delay",
        "z": "22c5681427f5f16c",
        "g": "735be7c02c9a324e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "2",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 206,
        "y": 620,
        "wires": [
            [
                "469d9b31ceb44b57"
            ]
        ]
    },
    {
        "id": "57433c658821b0be",
        "type": "function",
        "z": "22c5681427f5f16c",
        "g": "cff4bab635246357",
        "name": "consumeLicense",
        "func": "msg.url = msg.partnerUrl + `/companies/${msg.companyId}/sites/${msg.siteId}/services/MOBILE_VIDEO/licence`;\nmsg.method = \"POST\";\nmsg.headers = {};\nmsg.headers['Authorization'] = `Bearer ` + msg.apiKey;\nmsg.headers['Content-Type'] = 'application/json';\nmsg.payload = {\"action\":\"CONSUME\"}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1306,
        "y": 520,
        "wires": [
            [
                "f65d770fd1ee6f58"
            ]
        ]
    },
    {
        "id": "f65d770fd1ee6f58",
        "type": "http request",
        "z": "22c5681427f5f16c",
        "g": "cff4bab635246357",
        "name": "consumeLicense",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1506,
        "y": 520,
        "wires": [
            [
                "8d5e16139e518751"
            ]
        ]
    },
    {
        "id": "8d5e16139e518751",
        "type": "function",
        "z": "22c5681427f5f16c",
        "g": "cff4bab635246357",
        "name": "systemLog",
        "func": "if (msg.payload.unlicensedCount > 0){\n    msg.severity = \"Warn\"\n    if (msg.payload.unlicensedCount == 1){\n        msg.event = \"My2N license required\"\n        msg.detail = `${msg.payload.unlicensedCount} calling device is unlicensed, additional license must be purchased at my2n.com.`\n    }\n    else {\n        msg.event = \"My2N licenses required\"\n        msg.detail = `${msg.payload.unlicensedCount} calling devices are unlicensed, additional licenses must be purchased at my2n.com.`\n    }\n    \n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1686,
        "y": 520,
        "wires": [
            [
                "d885484fc80d4be9"
            ]
        ]
    },
    {
        "id": "d885484fc80d4be9",
        "type": "2nac-write-system-log",
        "z": "22c5681427f5f16c",
        "g": "cff4bab635246357",
        "name": "",
        "severity": "Info",
        "event": "",
        "detail": "",
        "x": 1856,
        "y": 520,
        "wires": []
    },
    {
        "id": "94e452042372c131",
        "type": "http request",
        "z": "22c5681427f5f16c",
        "g": "735be7c02c9a324e",
        "name": "getUser",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1436,
        "y": 620,
        "wires": [
            [
                "2fbcd3d6d9d3adf2"
            ]
        ]
    },
    {
        "id": "2fbcd3d6d9d3adf2",
        "type": "function",
        "z": "22c5681427f5f16c",
        "g": "735be7c02c9a324e",
        "name": "isAdmin?",
        "func": "const company = msg.payload.companies.find(c => c.id === msg.companyId);\nconst site = company.sites.find(s => s.id === msg.siteId);\n\nif (!site.roles.includes('ADMIN')){\n    msg.method = \"DELETE\"\n    msg.url = msg.partnerUrl+`/companies/${msg.companyId}/sites/${msg.siteId}/users/${msg.my2nUserId}`\n    msg.headers = {};\n    msg.headers['Authorization'] = `Bearer ` + msg.apiKey;\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1576,
        "y": 620,
        "wires": [
            [
                "162a9dfb4c77ff68"
            ]
        ]
    },
    {
        "id": "162a9dfb4c77ff68",
        "type": "http request",
        "z": "22c5681427f5f16c",
        "g": "735be7c02c9a324e",
        "name": "deleteUser",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1726,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "c9fba779ce0bb846",
        "type": "function",
        "z": "22c5681427f5f16c",
        "g": "2d1a32c0d45e626e",
        "name": "auth",
        "func": "msg.partnerUrl = flow.get(\"partnerUrl\")\nmsg.method = \"POST\"\nmsg.url = `https://auth.my2n.com/self-service/login?flow=${msg.payload.id}`\nmsg.payload = {\"identifier\":msg.username,\"password\":msg.password,\"method\": \"password\"}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 574,
        "y": 300,
        "wires": [
            [
                "4e2c80369c8e1bb3"
            ]
        ]
    },
    {
        "id": "4e2c80369c8e1bb3",
        "type": "http request",
        "z": "22c5681427f5f16c",
        "g": "2d1a32c0d45e626e",
        "name": "authRequest",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 714,
        "y": 300,
        "wires": [
            [
                "be52ee7881bef837"
            ]
        ]
    },
    {
        "id": "746c09a879b1a911",
        "type": "link in",
        "z": "22c5681427f5f16c",
        "g": "735be7c02c9a324e",
        "name": "link in 12",
        "links": [
            "58ce79a8b9b08990"
        ],
        "x": 101,
        "y": 620,
        "wires": [
            [
                "76fc7fdfa1df4da5"
            ]
        ]
    },
    {
        "id": "58ce79a8b9b08990",
        "type": "link out",
        "z": "22c5681427f5f16c",
        "g": "4e9450a5c0c1a2c0",
        "name": "link out 13",
        "mode": "link",
        "links": [
            "746c09a879b1a911"
        ],
        "x": 655,
        "y": 440,
        "wires": []
    },
    {
        "id": "4f3678f07c77d7a0",
        "type": "link in",
        "z": "22c5681427f5f16c",
        "g": "cff4bab635246357",
        "name": "link in 14",
        "links": [
            "f057a5c66659e383"
        ],
        "x": 101,
        "y": 520,
        "wires": [
            [
                "a47b4f19f4e6e174"
            ]
        ]
    },
    {
        "id": "f057a5c66659e383",
        "type": "link out",
        "z": "22c5681427f5f16c",
        "g": "4e9450a5c0c1a2c0",
        "name": "link out 15",
        "mode": "link",
        "links": [
            "4f3678f07c77d7a0"
        ],
        "x": 655,
        "y": 400,
        "wires": []
    }
]